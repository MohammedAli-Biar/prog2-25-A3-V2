import pandas as pd
import os

# Ruta de los CSV
DATA_DIR = os.path.join(os.path.dirname(__file__), "datos")
os.makedirs(DATA_DIR, exist_ok=True)

# ---------------------------
# Funciones de creaci√≥n
# ---------------------------

def crear_tabla_usuarios():
    return pd.DataFrame([
        {"id": 1, "nombre": "Vicente", "correo": "vicente@example.com", "elo": 1500, "pais": "Espa√±a"},
        {"id": 2, "nombre": "Sof√≠a", "correo": "sofia@example.com", "elo": 1400, "pais": "Espa√±a"},
        {"id": 3, "nombre": "Julio", "correo": "julio@example.com", "elo": 1600, "pais": "Espa√±a"}
    ])

def crear_tabla_partidas():
    return pd.DataFrame([
        {"id": 1, "jugador_blanco": 1, "jugador_negro": 2, "resultado": "1-0", "duracion": 3600},
        {"id": 2, "jugador_blanco": 3, "jugador_negro": 1, "resultado": "¬Ω-¬Ω", "duracion": 1800}
    ])

def crear_tabla_movimientos():
    return pd.DataFrame([
        {"id": 1, "partida_id": 1, "numero_jugada": 1, "movimiento_LAN": "Pe2-e4", "fen": "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1", "centipawns": 20},
        {"id": 2, "partida_id": 1, "numero_jugada": 2, "movimiento_LAN": "Pe7-e5", "fen": "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq e6 0 2", "centipawns": 10},
        {"id": 3, "partida_id": 1, "numero_jugada": 3, "movimiento_LAN": "Ng1-f3", "fen": "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2", "centipawns": 30}
    ])

def crear_tabla_torneos():
    return pd.DataFrame([
        {"id": 1, "nombre": "Torneo Internacional 2024", "fecha_inicio": "2024-06-01", "fecha_fin": "2024-06-10", "modalidad": "Cl√°sico", "premio": 5000.00}
    ])

def crear_tabla_estadisticas():
    return pd.DataFrame([
        {"usuario_id": 1, "victorias": 20, "derrotas": 15, "tablas": 5, "mejores_aperturas": "Ruy L√≥pez, Defensa Siciliana", "peor_apertura": "Gambito de Dama"}
    ])

# ---------------------------
# Funci√≥n para guardar CSVs
# ---------------------------

def guardar_tablas(tablas: dict):
    for nombre, df in tablas.items():
        ruta = os.path.join(DATA_DIR, f"{nombre}.csv")
        df.to_csv(ruta, index=False)
        print(f"‚úÖ Guardado: {nombre}.csv")

# ---------------------------
# Funci√≥n para cargar CSVs si existen
# ---------------------------

def cargar_tablas():
    tablas = {}
    for nombre in ["usuarios", "partidas", "movimientos", "torneos", "estadisticas"]:
        ruta = os.path.join(DATA_DIR, f"{nombre}.csv")
        if os.path.exists(ruta):
            tablas[nombre] = pd.read_csv(ruta)
            print(f"üì• Cargado desde archivo: {nombre}.csv")
        else:
            print(f"‚ö†Ô∏è No se encontr√≥ {nombre}.csv, se usar√° tabla vac√≠a o generada.")
    return tablas

# ---------------------------
# Main
# ---------------------------

def main():
    # Cargar tablas si existen
    tablas = cargar_tablas()

    # Si alguna tabla no existe, la generamos
    tablas.setdefault("usuarios", crear_tabla_usuarios())
    tablas.setdefault("partidas", crear_tabla_partidas())
    tablas.setdefault("movimientos", crear_tabla_movimientos())
    tablas.setdefault("torneos", crear_tabla_torneos())
    tablas.setdefault("estadisticas", crear_tabla_estadisticas())

    # Vista previa
    for nombre, df in tablas.items():
        print(f"\nüîé {nombre.capitalize()}:\n", df.head())

    # Guardar
    guardar_tablas(tablas)

if __name__ == "__main__":
    main()
